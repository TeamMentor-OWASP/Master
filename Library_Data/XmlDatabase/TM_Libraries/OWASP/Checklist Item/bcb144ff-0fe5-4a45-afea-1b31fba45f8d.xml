<?xml version="1.0" encoding="utf-8"?>
<guidanceItem id="bcb144ff-0fe5-4a45-afea-1b31fba45f8d" Author="" Category="Authentication" Priority="2" Rule_Type="Checklist Item" Status="" Technology="Java" title="Accounts Are Locked After Consecutive Failed Login Attempts" Topic="Security" phase="Design" xmlns="urn:microsoft:guidanceexplorer:guidanceItem">
  <content>&lt;h1&gt;What to Check For&lt;/h1&gt;&lt;p&gt;Ensure that accounts&amp;nbsp;are locked after consecutive failed login attempts. &lt;/p&gt;&lt;h1&gt;Why&lt;/h1&gt;&lt;p&gt;Multiple, consecutive failed authentication attempts over a short period of time are a symptom that is used to detect when an account is under attack. Locking out the account prevents the attacker from compromising and accessing the account.&lt;/p&gt;&lt;h1&gt;How to Check&lt;/h1&gt;&lt;p&gt;Follow these steps to ensure your application will lock out an account after consecutive failed login attempts:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verify your application has a lockout policy. &lt;/strong&gt;An account lockout policy is typically application specific. Review your application's requirements and design specifications and verify the&amp;nbsp;following functionality:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;A mechanism for determining failed authentication attempts &lt;/li&gt;&lt;li&gt;A mechanism for locking accounts that have exceeded the maximum number of allowed authentication attempts &lt;/li&gt;&lt;li&gt;A mechanism for unlocking accounts that have exceeded the maximum number of allowed authentication attempts&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ensure your application tracks login attempts. &lt;/strong&gt;All authentication procedures record the number of authentication attempts for each user &lt;/p&gt;&lt;ul&gt;&lt;li&gt;The login counter for each user is reset to 0 upon a successful authentication&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ensure your application enforces the lockout policy. &lt;/strong&gt;All authentication procedures implement your application's lockout policy &lt;/p&gt;&lt;ul&gt;&lt;li&gt;The implementation matches the lockout policy as the business requirements of your organization may change over time&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; PCI DSS certification requires that logs should include failed access attempts, that a user gets locked out after no more than 6 failed login attempts, and the lockout lasts for&amp;nbsp;at least&amp;nbsp;30 minutes.&lt;/p&gt;&lt;h1&gt;Problem Example&lt;/h1&gt;&lt;p&gt;The following code executes the database transaction that is required during authentication. Because the transaction fails to check the login attempts counter, it is possible for an attacker to compromise an account through the use of brute force or a dictionary attack.&lt;/p&gt;&lt;blockquote&gt;&lt;pre&gt;// The application fails to check the number of login attempts&lt;br&gt;String dbStatement = "select user from users where user = ? and pass = ?;";&lt;br&gt;st = dbConnection.prepareStatement(dbStatement);&lt;br&gt;st.setString(1, user);&lt;br&gt;st.setString(2, passDigest);&lt;br&gt;rs = st.executeQuery();&lt;/pre&gt;&lt;/blockquote&gt;&lt;h1&gt;Related Guideline&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="ruledisplay:32965A97-7033-4A05-97E0-EDDBAA59EF7C"&gt;Guideline: Lock Accounts After Consecutive Failed Login Attempts (Java Web Application)&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;</content>
</guidanceItem>