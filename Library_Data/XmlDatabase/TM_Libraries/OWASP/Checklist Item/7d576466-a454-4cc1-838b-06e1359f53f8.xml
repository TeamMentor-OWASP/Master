<?xml version="1.0" encoding="utf-8"?>
<guidanceItem id="7d576466-a454-4cc1-838b-06e1359f53f8" Author="" Category="Session Management" Priority="2" Rule_Type="Checklist Item" Status="" Technology="Java" title="Session Cookies Are Protected" Topic="Security" phase="Implementation" xmlns="urn:microsoft:guidanceexplorer:guidanceItem">
  <content>&lt;h1&gt;What to Check For&lt;/h1&gt;&lt;p&gt;Ensure that the confidentiality of session cookies is protected.&lt;/p&gt;&lt;h1&gt;Why&lt;/h1&gt;&lt;p&gt;Session cookies are used by an application to identify the session associated with a particular user. Protecting session cookies can help prevent an attacker from hijacking the session and using the application posing as a legitimate user.&lt;/p&gt;&lt;h1&gt;How to Check&lt;/h1&gt;&lt;p&gt;Use the following steps to verify that your application's session cookies are handled securely:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verify that session identifiers cannot be guessed. &lt;/strong&gt;Ensure that your application's session identifiers cannot be guessed by an attacker. Verify that your application's session IDs meet the following requirements:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Length&lt;/strong&gt;: Your application uses long session identifiers (e.g. string of length 32). &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triviality&lt;/strong&gt;: Your application uses randomly generated session identifiers. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Lifetime&lt;/strong&gt;: Your application uses &lt;strong&gt;HttpSession.setMaxInactiveInterval&lt;/strong&gt; to expire inactive sessions. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Recycling&lt;/strong&gt;: Your application does not reuse previously used sessions.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verify that users can invalidate their own sessions. &lt;/strong&gt;Ensure that your application uses &lt;strong&gt;HttpSession.invalidate&lt;/strong&gt; to allow its users to invalidate their own sessions.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verify that session cookies are sent over encrypted channels. &lt;/strong&gt;Ensure your application transmits session cookies over encrypted channels. Although this is not required for non-sensitive transactions, it is mandatory for any transactions are sensitive in nature.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;Problem Example&lt;/h1&gt;&lt;p&gt;The following code shows the logout function of the &lt;strong&gt;LoginModule&lt;/strong&gt; used when relying on JAAS for authentication. The code removes all authentication tokens associated with the current session but fails to invalidate the session. &lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;pre&gt;public boolean logout() throws LoginException&lt;br&gt;{&lt;br&gt;      subject.getPrincipals().remove(userToken);&lt;br&gt;      succeeded = false;&lt;br&gt;      commitSucceeded = false;&lt;br&gt;      clearCredentials();&lt;br&gt;      userToken = null;&lt;br&gt;       // The application should have invalidated the session here.&lt;br&gt;       // Log the logout event. Consult the Logging section for more details&lt;br&gt;      return true;&lt;br&gt;}&lt;/pre&gt;&lt;/blockquote&gt;&lt;h1&gt;Additional Resources&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;To learn more about session prediction attacks, see: &lt;a href="http://www.webappsec.org/projects/threat/classes/credential_session_prediction.shtml"&gt;Credential and Session Prediction&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;Related Guideline&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="ruledisplay:F0E2BFFC-E6D1-4DC6-A6C2-D078F54AE10E"&gt;Guideline: Protect Session Cookies (Java Web Application)&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;</content>
</guidanceItem>