<?xml version="1.0" encoding="utf-8"?>
<guidanceItem id="26ca24fa-2c72-4482-80e3-7de6e8eb013d" Author="" Category="Communication Security" Priority="2" Rule_Type="Checklist Item" Status="" Technology="Java" title="Communication Links Are Encrypted" Topic="Security" phase="Implementation" xmlns="urn:microsoft:guidanceexplorer:guidanceItem">
  <content>&lt;h1&gt;What to Check For&lt;/h1&gt;&lt;p&gt;Ensure that the communication channels are encrypted when interacting with other software across the network.&lt;/p&gt;&lt;h1&gt;Why&lt;/h1&gt;&lt;p&gt;Encrypting the communication links allows the application to preserve confidentiality and integrity of the transmitted data.&lt;/p&gt;&lt;h1&gt;How to Check&lt;/h1&gt;&lt;p&gt;Use the following steps to ensure that your application's communication links are encrypted:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Identify the connections used for transmitting sensitive data. &lt;/strong&gt;Identify the sensitive data that is sent over the network and enumerate&amp;nbsp;the respective connections that are used for such communication.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Verify that connections are secured. &lt;/strong&gt;Using a network sniffer, verify that your application utilizes either IPSec or TLS/SSL then check the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;IPSec&lt;/strong&gt;:&amp;nbsp;If your application uses IPSec, verify that&amp;nbsp;all packets from your sniffed traffic between the specified hosts contain an Authentication Header (AH) and Encapsulating Security Payload (ESP) fields after the IP headers.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;TLS/SSL&lt;/strong&gt;:&amp;nbsp;If your application uses TLS/SSL, verify that&amp;nbsp;your sniffed traffic between the specified hosts contains an SSL handshake. Keep in mind the following considerations when verifying your application's use of SSL:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Certificate Validity&lt;/strong&gt;: Verify that your application's SSL certificate has not reached its expiration date. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Certificate Version&lt;/strong&gt;: Verify that your application uses SSL version 3.0 certificate.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Domain Name&lt;/strong&gt;: Verify that the domain name for your application's administrative interface is the same as the domain name listed in the SSL certificate.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chain of Trust&lt;/strong&gt;: Verify that your application's users can verify your application's SSL certificate based on the root certificates that are stored in their browsers. If your application uses self-signed SSL certificates, ensure that your organization's root certificate is securely imported into the users' browsers.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Server Configuration&lt;/strong&gt;: Verify that your application's environment has enabled HTTPS. Verify that transactions of sensitive nature are transmitted only over HTTPS connections. Check if your application's deployment descriptor (e.g. web.xml) has the &lt;strong&gt;transport-guarantee&lt;/strong&gt; element set to &lt;strong&gt;CONFIDENTIAL&lt;/strong&gt;:&lt;/p&gt;&lt;blockquote&gt;&lt;pre&gt;&amp;lt;security-constraint&amp;gt;&lt;br&gt;  &amp;lt;web-resource-collection&amp;gt;&lt;br&gt;    &amp;lt;web-resource-name&amp;gt;AcctManager&amp;lt;/web-resource-name&amp;gt;&lt;br&gt;    &amp;lt;url-pattern&amp;gt;/acctmanager/*&amp;lt;/url-pattern&amp;gt;&lt;br&gt;    &amp;lt;http-method&amp;gt;GET&amp;lt;/http-method&amp;gt;&lt;br&gt;    &amp;lt;http-method&amp;gt;POST&amp;lt;/http-method&amp;gt;&lt;br&gt;  &amp;lt;/web-resource-collection&amp;gt;&lt;br&gt;  &amp;lt;user-data-constraint&amp;gt;&lt;br&gt;    &amp;lt;transport-guarantee&amp;gt;&lt;strong&gt;CONFIDENTIAL&lt;/strong&gt;&amp;lt;/transport-guarantee&amp;gt;&lt;br&gt;  &amp;lt;/user-data-constraint&amp;gt;&lt;br&gt;  &amp;lt;auth-constraint&amp;gt;&lt;br&gt;    &amp;lt;role-name&amp;gt;manager&amp;lt;/role-name&amp;gt;&lt;br&gt;  &amp;lt;/auth-constraint&amp;gt;&lt;br&gt;&amp;lt;/security-constraint&amp;gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;Problem Example&lt;/h1&gt;&lt;p&gt;The following code establishes a connection between&amp;nbsp;two servers. Unfortunately, the communication is not encrypted; therefore, it is possible for an attacker to eavesdrop on the connection.&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;pre&gt;String remoteHost = "server02.example.com";&lt;br&gt;int remotePort = "1337";&lt;br&gt;Socket sock = new Socket(remoteHost, remotePort);&lt;br&gt;InputStreamReader isr = new InputStreamReader(sock.getInputStream());&lt;br&gt;BufferedReader input = new BufferedReader(isr);&lt;br&gt;PrintWriter output = new PrintWriter(sock.getOutputStream(), true);&lt;/pre&gt;&lt;/blockquote&gt;&lt;h1&gt;Related Guideline&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="ruledisplay:5E283FD0-1A55-4DC3-971D-BF7C3318E7CB"&gt;Guideline: Encrypt Communication Links (Java Web Application)&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;</content>
</guidanceItem>