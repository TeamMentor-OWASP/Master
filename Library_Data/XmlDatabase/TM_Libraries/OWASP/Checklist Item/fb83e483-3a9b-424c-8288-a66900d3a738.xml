<?xml version="1.0" encoding="utf-8"?>
<guidanceItem id="fb83e483-3a9b-424c-8288-a66900d3a738" Author="" Category="Input and Data Validation" Priority="2" Rule_Type="Checklist Item" Status="" Technology="ASP.NET 3.5" title="Application Does Not Rely Only on Request Validation" Topic="Security" phase="Implementation" xmlns="urn:microsoft:guidanceexplorer:guidanceItem">
  <content>&lt;h1&gt;What to Check For&lt;/h1&gt;&lt;p&gt;Ensure that your application does not rely solely upon ASP.NET request validation to protect against malicious input.&lt;/p&gt;&lt;h1&gt;Why&lt;/h1&gt;&lt;p&gt;Request validation will catch some attacks; however, it provides only basic input validation. Do not rely on it. Use it as an extra precautionary measure in addition to your own input validation. Only you can define what represents good input for your application. &lt;/p&gt;&lt;h1&gt;How to Check&lt;/h1&gt;&lt;p&gt;To check for this problem, you must determine if your application is relying solely upon request validation to provide input and data validation. Use the following steps:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Find all sources of input in your application.&lt;/strong&gt; During design time identify all of the potential sources of input to your application. Scour the source code to discover sources of input that may have been missed in the design. Compile a list that you can use in the following steps. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Identify validation routines.&lt;/strong&gt; Each input source should have a data validation routine associated with it.&amp;nbsp;Ideally the validation will occur as soon after the input reaches your application as possible. Shared validation routines are better than creating many spread throughout your code base, so check for consolidation of routines to aid testing and reduce the chance of one-off bugs. If an input source does not have a validation routine associated with it, flag it for fixing.&lt;/p&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ensure quality of validation routines.&lt;/strong&gt; Validation routines&amp;nbsp;should check for length, range, format, and type. Validation should check first&amp;nbsp;for known valid and safe data and then for malicious, dangerous data. Do not rely on filtering out all malicious data because&amp;nbsp;it is too easy to miss something. Do not rely on client-side validation alone as it can be easily bypassed.&lt;/p&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;How to Fix&lt;/h1&gt;&lt;p&gt;Check for known good data and constrain input by validating it for type, length, format, and range.&amp;nbsp;For more information on protecting against injection attacks through property input validation, see &lt;a href="http://msdn.microsoft.com/library/en-us/dnpag2/html/PAGHT000003.asp"&gt;How To: Protect From Injection Attacks in ASP.NET&lt;/a&gt;.&amp;nbsp; For more information on input validation using regular expressions, see &lt;a href="http://msdn.microsoft.com/library/en-us/dnpag2/html/PAGHT000001.asp"&gt;How To: Use Regular Expressions to Constrain Input in ASP.NET&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Validating input does not remove the need to format output, parameterize queries, or otherwise handle user input carefully.&lt;/p&gt;&lt;h1&gt;Problem Example&lt;/h1&gt;&lt;p&gt;An ASP.NET application uses forms authentication; however, it relies upon request validation to validate the form of the username and password entered by the user.&amp;nbsp;The application does not contain any validation routines to check input for length, range, format and type.&lt;/p&gt;&lt;h1&gt;Solution Example&lt;/h1&gt;&lt;p&gt;An ASP.NET application uses forms authentication and has a variety of other input fields for user interaction.&amp;nbsp; Request validation has been left on as a precautionary measure; however, it is not the sole defense mechanism against malicious input. The application authors have included validation routines through which all untrusted input and data is passed before it is used by the application.&lt;/p&gt;&lt;h1&gt;Related Items&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;div&gt;&lt;a href="ruledisplay:5f6a8e60-f809-4038-a725-c5019f1dc993"&gt;Guideline: Validate Input from All Sources&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div&gt;&lt;a href="ruledisplay:417133af-0ab8-4ad5-9aea-a59b08abf022"&gt;Checklist Item: All Input is Validated For Length, Range, Format, and Type&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;p&gt;Adapted from Microsoft patterns &amp;amp; practices guidance. &lt;/p&gt;</content>
</guidanceItem>