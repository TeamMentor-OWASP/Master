<?xml version="1.0" encoding="utf-8"?>
<guidanceItem id="1e86ab18-716e-4761-b3f9-6ababeee2511" Author="" Category="Authentication" Priority="2" Rule_Type="Guideline" Status="" Technology="ASP.NET 3.5" title="Specify Hashed Password Format in Provider Configuration" Topic="Security" phase="Implementation" xmlns="urn:microsoft:guidanceexplorer:guidanceItem">
  <content>&lt;h1&gt;What to Do&lt;/h1&gt;&lt;p&gt;Specify a hashed password format in the configuration for you membership provider. &lt;/p&gt;&lt;h1&gt;Why&lt;/h1&gt;&lt;p&gt;By storing your password with hashes and salt, you help prevent an attacker that gains access to your user store from obtaining the user passwords.&amp;nbsp; If you use encryption, you have the added problem of securing the encryption key; hashes are not reversible and have no key to be compromised.&amp;nbsp; If your credential store is compromised, the salt value helps to slow an attacker who is attempting to perform a dictionary attack.&amp;nbsp; This gives you additional time to detect and react to the compromise. &lt;/p&gt;&lt;h1&gt;When&lt;/h1&gt;&lt;p&gt;All systems which use membership providers should use a hashed password format. &lt;/p&gt;&lt;h1&gt;How&lt;/h1&gt;&lt;p&gt;Do not store user passwords either in plaintext or encrypted format.&amp;nbsp; Instead, store password hashes with salt.&amp;nbsp; Use one of the membership providers to help protect credentials in storage and where possible, specify a hashed password format on your provider configuration.&lt;/p&gt;&lt;br&gt;&lt;hr&gt;&lt;p&gt;Adapted from Microsoft patterns &amp;amp; practices guidance. &lt;/p&gt;</content>
</guidanceItem>