<?xml version="1.0" encoding="utf-8"?>
<guidanceItem id="b797adfa-93bf-4f6e-9b30-70a0758ecd3d" Author="" Category="Input and Data Validation" Priority="J.D. Meier, Alex Mackman, Michael Dunner, Srinath Vasireddy, Ray Escamilla and Anandha Murukan" Rule_Type="Guideline" Status="" Technology=" Any" title="Do Not Rely on Client-Side Validation" Topic="Security" phase="Design" xmlns="urn:microsoft:guidanceexplorer:guidanceItem">
  <content>&lt;h1&gt;Applies to&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;div&gt;Web Application&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;What to Do&lt;/h1&gt;&lt;p&gt;Client-side validation can reduce the number of round trips to the server, but do not rely on it for security because it is easy to bypass. Validate all input at the server. &lt;/p&gt;&lt;h1&gt;Why&lt;/h1&gt;&lt;p&gt;It is easy to modify the behavior of the client or just write a new client that does not observe the same data validation rules.&lt;/p&gt;&lt;h1&gt;When&lt;/h1&gt;&lt;p&gt;All applications should only use Server-side validation when the code relys on security.&lt;/p&gt;&lt;h1&gt;How&lt;/h1&gt;&lt;p&gt;Server-side code should perform its own validation. What if an attacker bypasses your client, or shuts off your client-side script routines, for example, by disabling JavaScript? Use client-side validation to help reduce the number of round trips to the server but do not rely on it for security. This is an example of defense in depth.&lt;/p&gt;&lt;h1&gt;Additional Resources&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;For more information see, "Chapter 4 - Design Guidelines for Secure Web Applications" at &lt;a href="http://msdn2.microsoft.com/en-us/library/aa302420.aspx"&gt;http://msdn2.microsoft.com/en-us/library/aa302420.aspx&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;p&gt;Adapted from Microsoft patterns &amp;amp; practices guidance.&lt;/p&gt;</content>
</guidanceItem>