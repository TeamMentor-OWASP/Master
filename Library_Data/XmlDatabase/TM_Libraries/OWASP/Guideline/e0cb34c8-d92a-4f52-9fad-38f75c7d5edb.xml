<?xml version="1.0" encoding="utf-8"?>
<guidanceItem id="e0cb34c8-d92a-4f52-9fad-38f75c7d5edb" Author="" Category="Session Management" Priority="J.D. Meier, Alex Mackman, Michael Dunner, Srinath Vasireddy, Ray Escamilla and Anandha Murukan" Rule_Type="Guideline" Status="" Technology=" Any" title="Use SSL to Protect Session Authentication Cookies" Topic="Security" phase="Design" xmlns="urn:microsoft:guidanceexplorer:guidanceItem">
  <content>&lt;h1&gt;Applies to&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;Web Application&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;What to Do&lt;/h1&gt;&lt;p&gt;You must protect the authentication cookie&amp;nbsp;with SSL. &lt;/p&gt;&lt;h1&gt;Why&lt;/h1&gt;&lt;p&gt;To prevent session hijacking and cookie replay attacks, secure the cookie by making sure that it is only passed over SSL connections using the HTTPS protocol. For additional risk mitigation, encrypt the cookie before sending it to the client and limit the period for which the cookie is valid. &lt;/p&gt;&lt;h1&gt;When&lt;/h1&gt;&lt;p&gt;When&amp;nbsp;you use Forms authentication, make sure your application encrypts the authentication cookies using the &lt;strong&gt;protection="All"&lt;/strong&gt; attribute on the &lt;strong&gt;&amp;lt;forms&amp;gt; &lt;/strong&gt;element. This practice is recommended in addition to SSL to mitigate the risk of an XSS attack that manages to steal the authentication cookie of a user.&amp;nbsp; &lt;/p&gt;&lt;h1&gt;How&lt;/h1&gt;&lt;p&gt;Do not pass authentication cookies over HTTP connections. Set the secure cookie property within authentication cookies, which instructs browsers to send cookies back to the server only over HTTPS connections. For more information, see Chapter&amp;nbsp;10, "Building Secure ASP.NET Web Pages and Controls."&lt;/p&gt;&lt;p&gt;If you are using .NET Framework version 1.1, set the secure property by using &lt;strong&gt;requireSSL="true"&lt;/strong&gt; on the &lt;strong&gt;&amp;lt;forms&amp;gt;&lt;/strong&gt; element as follows:&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;&amp;lt;forms loginUrl="Secure\Login.aspx"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; requireSSL="true" . . . /&amp;gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;If you are using .NET Framework version 1.0, set the secure property manually in the &lt;strong&gt;Application_EndRequest&lt;/strong&gt; event handler in Global.asax using the following code:&lt;/p&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;pre&gt;protected void Application_EndRequest(Object sender, EventArgs e) &lt;br&gt;{&lt;br&gt;&amp;nbsp; string authCookie = FormsAuthentication.FormsCookieName;&lt;br&gt;&lt;br&gt;&amp;nbsp; foreach (string sCookie in Response.Cookies) &lt;br&gt;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if (sCookie.Equals(authCookie))&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; { &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Set the cookie to be secure. Browsers will send the cookie&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // only to pages requested with https&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Response.Cookies[sCookie].Secure = true;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br&gt;&amp;nbsp; }&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;h1&gt;Additional Resources&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;Design Guidelines for Secure Web Applications &lt;a href="http://msdn2.microsoft.com/en-us/library/aa302420.aspx"&gt;http://msdn2.microsoft.com/en-us/library/aa302420.aspx&lt;/a&gt; &lt;/li&gt;&lt;li&gt;Architecture and Design Review for Security &lt;a href="http://msdn2.microsoft.com/en-us/library/aa302420.aspx"&gt;http://msdn2.microsoft.com/en-us/library/aa302420.aspx&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;p&gt;Adapted from Microsoft patterns &amp;amp; practices guidance.&lt;/p&gt;</content>
</guidanceItem>